<?xml version="1.0" encoding="utf-8"?>
<resources>

    <declare-styleable name="PullToRefresh">
        <!-- A drawable to use as the background of the Refreshable View -->
        <attr name="ptrRefreshableViewBackground" format="reference|color" />

        <!-- A drawable to use as the background of the Header and Footer Loading Views -->
        <attr name="ptrHeaderBackground" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views -->
        <attr name="ptrHeaderTextColor" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views Sub Header -->
        <attr name="ptrHeaderSubTextColor" format="reference|color" />

        <!-- Mode of Pull-to-Refresh that should be used -->
        <attr name="ptrMode">
            <flag name="disabled" value="0x0" />
            <flag name="pullFromStart" value="0x1" />
            <flag name="pullFromEnd" value="0x2" />
            <flag name="both" value="0x3" />
            <flag name="manualOnly" value="0x4" />

            <!-- These last two are depreacted -->
            <flag name="pullDownFromTop" value="0x1" />
            <flag name="pullUpFromBottom" value="0x2" />
        </attr>

        <!-- Whether the Indicator overlay(s) should be used -->
        <attr name="ptrShowIndicator" format="reference|boolean" />

        <!-- Drawable to use as Loading Indicator. Changes both Header and Footer. -->
        <attr name="ptrDrawable" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Header View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableStart" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Footer View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableEnd" format="reference" />

        <!-- Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. -->
        <attr name="ptrOverScroll" format="reference|boolean" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views -->
        <attr name="ptrHeaderTextAppearance" format="reference" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header -->
        <attr name="ptrSubHeaderTextAppearance" format="reference" />

        <!-- Style of Animation should be used displayed when pulling. -->
        <attr name="ptrAnimationStyle">
            <flag name="rotate" value="0x0" />
            <flag name="flip" value="0x1" />
        </attr>

        <!-- Whether the user can scroll while the View is Refreshing -->
        <attr name="ptrScrollingWhileRefreshingEnabled" format="reference|boolean" />

        <!--
        	Whether PullToRefreshListView has it's extras enabled. This allows the user to be 
        	able to scroll while refreshing, and behaves better. It acheives this by adding
        	Header and/or Footer Views to the ListView.
        -->
        <attr name="ptrListViewExtrasEnabled" format="reference|boolean" />

        <!--
        	Whether the Drawable should be continually rotated as you pull. This only
        	takes effect when using the 'Rotate' Animation Style.
        -->
        <attr name="ptrRotateDrawableWhilePulling" format="reference|boolean" />

        <!-- BELOW HERE ARE DEPRECEATED. DO NOT USE. -->
        <attr name="ptrAdapterViewBackground" format="reference|color" />
        <attr name="ptrDrawableTop" format="reference" />
        <attr name="ptrDrawableBottom" format="reference" />
    </declare-styleable>

    <!--谷歌下拉刷新风格的引入属性-->
    <declare-styleable name="GoogleCircleProgressView">
        <attr name="gcp_inner_radius" format="dimension" />
        <attr name="gcp_background_color" format="color" />
        <attr name="gcp_progress_color" format="color" />
        <attr name="gcp_progress_stoke_width" format="dimension" />
        <attr name="gcp_show_arrow" format="boolean" />
        <attr name="gcp_enable_circle_background" format="boolean" />
        <attr name="gcp_arrow_width" format="dimension" />
        <attr name="gcp_arrow_height" format="dimension" />

        <attr name="gcp_progress" format="integer" />
        <attr name="gcp_max" format="integer" />


        <attr name="gcp_progress_text_size" format="dimension" />
        <attr name="gcp_progress_text_color" format="color" />

        <!--<attr name="gcp_progress_text_offset" format="dimension"/>-->

        <attr name="gcp_progress_text_visibility" format="enum">
            <enum name="visible" value="0" />
            <enum name="invisible" value="1" />
        </attr>
    </declare-styleable>
    <declare-styleable name="RoundProgressBar">
        <attr name="roundColor" format="color" />
        <attr name="roundProgressColor" format="color" />
        <attr name="roundWidth" format="dimension"></attr>
        <attr name="textColor" format="color" />
        <attr name="textSize" format="dimension" />
        <attr name="max" format="integer"></attr>
        <attr name="textIsDisplayable" format="boolean"></attr>
        <attr name="style">
            <enum name="STROKE" value="0"></enum>
            <enum name="FILL" value="1"></enum>
        </attr>
    </declare-styleable>
    <declare-styleable name="CircleImageView">
        <attr name="civ_border_width" format="dimension" />
        <attr name="civ_border_color" format="color" />
        <attr name="civ_border_overlay" format="boolean" />
        <attr name="civ_fill_color" format="color" />
    </declare-styleable>
    <declare-styleable name="XEditText">
        <attr name="x_separator" format="string" />
        <attr name="x_customizeMarkerEnable" format="boolean" />
        <attr name="x_showMarkerTime">
            <enum name="after_input" value="0" />
            <enum name="before_input" value="1" />
            <enum name="always" value="2" />
        </attr>
        <attr name="x_iOSStyleEnable" format="boolean" />
    </declare-styleable>
    <declare-styleable name="RollViewPager">
        <attr name="rollviewpager_hint_mode">
            <enum name="point" value="0" />
            <enum name="number" value="1" />
        </attr>
        <attr name="rollviewpager_hint_gravity">
            <enum name="left" value="0" />
            <enum name="center" value="1" />
            <enum name="right" value="2" />
        </attr>
        <attr name="rollviewpager_hint_paddingRight" format="dimension" />
        <attr name="rollviewpager_hint_paddingLeft" format="dimension" />
        <attr name="rollviewpager_hint_paddingTop" format="dimension" />
        <attr name="rollviewpager_hint_paddingBottom" format="dimension" />
        <attr name="rollviewpager_play_delay" format="integer" />
        <attr name="rollviewpager_hint_color" format="color" />
        <attr name="rollviewpager_hint_alpha" format="integer" />
    </declare-styleable>
    <declare-styleable name="ConvenientBanner">
        <attr name="canLoop" format="boolean" />
    </declare-styleable>
    <declare-styleable name="CircleProgressBar">
        <attr name="circleStrokeWidth" format="dimension" />
        <attr name="bgProgressBarColor" format="color" />
    </declare-styleable>
    <declare-styleable name="WaveView">
        <attr name="above_wave_color" format="color" />
        <attr name="blow_wave_color" format="color" />
        <attr name="progress" format="integer" />
        <attr name="wave_length" format="enum">
            <enum name="large" value="1" />
            <enum name="middle" value="2" />
            <enum name="little" value="3" />
        </attr>
        <attr name="wave_height" format="enum">
            <enum name="large" value="1" />
            <enum name="middle" value="2" />
            <enum name="little" value="3" />
        </attr>
        <attr name="wave_hz" format="enum">
            <enum name="fast" value="1" />
            <enum name="normal" value="2" />
            <enum name="slow" value="3" />
        </attr>
    </declare-styleable>
    <declare-styleable name="Themes">
        <attr name="waveViewStyle" format="reference" />
    </declare-styleable>
    <declare-styleable name="CheckBox">
        <attr name="carbon_checkColor" format="reference|color" />
    </declare-styleable>
    <declare-styleable name="RadioButton">
        <attr name="carbon_radioColor" format="reference|color" />
    </declare-styleable>
    <declare-styleable name="SmoothCheckBox">
        <attr name="duration" format="integer" />
        <attr name="stroke_width" format="dimension" />
        <attr name="color_tick" format="color" />
        <attr name="color_checked" format="color" />
        <attr name="color_unchecked" format="color" />
        <attr name="color_unchecked_stroke" format="color" />
    </declare-styleable>

</resources>
